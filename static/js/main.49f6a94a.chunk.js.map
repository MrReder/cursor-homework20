{"version":3,"sources":["components/Timer.jsx","components/Timer2.jsx","components/Timer3.jsx","components/TimersPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["Timer","props","useState","minutes","setMinutes","seconds","setSeconds","useEffect","interval","setInterval","restart","start","clearInterval","Timer2","isRunning","setIsRunning","className","onClick","time","autostart","onTick","step","onTimeEnd","onTimeStart","onTimePause","id","window","renderTime","currentTime","Math","floor","currentSeconds","style","display","TimersPage","getStart","setState","setTimeout","getRestart","handleTimeEnd","console","log","state","handleChangeTick","handleTimeStart","timeLeft","handleTimePause","undefined","bind","this","Timer3","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49f6a94a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Timer = (props) => {\r\n    const initialMinute = 1;\r\n    const initialSeconds = 30;\r\n    const [minutes, setMinutes] = useState(initialMinute);\r\n    const [seconds, setSeconds] = useState(initialSeconds);\r\n    useEffect(() => {\r\n        let interval = setInterval(() => {\r\n            if (props.restart) {\r\n                setSeconds(initialSeconds);\r\n                setMinutes(initialMinute);\r\n            }\r\n            else if (props.start) {\r\n                if (seconds > 0) {\r\n                    setSeconds(seconds - 1);\r\n                } else if (seconds === 0) {\r\n                    clearInterval(interval);\r\n                }\r\n            }\r\n            if (seconds === 0) {\r\n                if (minutes === 0) {\r\n                    clearInterval(interval)\r\n                } else {\r\n                    setMinutes(minutes - 1);\r\n                    setSeconds(59);\r\n                }\r\n            }\r\n        }, 1000)\r\n        return () => {\r\n            clearInterval(interval);\r\n        };\r\n    });\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            { minutes === 0 && seconds === 0 ?\r\n                <h1>00:00</h1> :\r\n                <h1>0{minutes}:{seconds < 10 ? `0${seconds}` : seconds}</h1>}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Timer;\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst Timer2 = () => {\r\n    const [seconds, setSeconds] = useState(12);\r\n    const [isRunning, setIsRunning] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let interval = setInterval(() => {\r\n            if (isRunning) {\r\n                if (seconds > 0) {\r\n                    setSeconds(seconds => seconds - 1);\r\n                } else if (seconds === 0) {\r\n                    // clearInterval(interval); You should use this case if you want to stop timer on 0 seconds\r\n                    setSeconds(12);\r\n                }\r\n            }\r\n\r\n        }, 1000);\r\n        return () => {\r\n            clearInterval(interval);\r\n        };\r\n\r\n\r\n    }, [isRunning, seconds]);\r\n    return (\r\n        <div className=\"timer2-wrapper\">\r\n            <h1>{seconds}</h1>\r\n            <div className=\"buttons-wrapper\">\r\n                {\r\n                    isRunning ?\r\n                        (<button className=\"btn\" onClick={() => setIsRunning(false)}>Pause timer</button>) :\r\n                        (<button className=\"btn\" onClick={() => setIsRunning(true)}>Start timer</button>)\r\n                }\r\n                <button className=\"btn\" onClick={() => {\r\n                    setIsRunning(false);\r\n                    setSeconds(12);\r\n                }}>Restart timer</button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Timer2;","import React, { useState, useEffect } from 'react';\r\nimport './style.css';\r\nconst Timer = (props) => {\r\n    const { time, autostart, onTick, step, onTimeEnd, onTimeStart, onTimePause } = props;\r\n    const [seconds, setSeconds] = useState(time);\r\n    const [isRunning, setIsRunning] = useState(autostart)\r\n    useEffect(() => {\r\n        if (isRunning) {\r\n            const id = window.setInterval(() => setSeconds(seconds => seconds - 1), step);\r\n            onTick(seconds)\r\n            if (seconds === -1) {\r\n                onTimeEnd();\r\n                setSeconds(time)\r\n            }\r\n            return () => window.clearInterval(id)\r\n        }\r\n    }, [isRunning, seconds, time]);\r\n\r\n    const handleClickPlay = () => {\r\n        setIsRunning(true)\r\n        onTimeStart(seconds, renderTime);\r\n    }\r\n    const handlePauseClick = () => {\r\n        setIsRunning(false)\r\n        onTimePause(seconds, renderTime)\r\n    }\r\n    const handleRestartClick = () => {\r\n        setSeconds(time)\r\n        setIsRunning(true);\r\n    }\r\n    const renderTime = (currentTime) => {\r\n        const secondsInMinute = 60\r\n        if (currentTime > secondsInMinute) {\r\n            const minutes = Math.floor(currentTime / secondsInMinute)\r\n            const currentSeconds = currentTime - (secondsInMinute * minutes)\r\n            if (!currentSeconds) {\r\n                return `${minutes}:00`;\r\n            }\r\n            if (currentSeconds < 10) {\r\n                return `${minutes}:0${currentSeconds}`;\r\n            }\r\n            return `${minutes}:${currentSeconds}`\r\n        }\r\n        return currentTime\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div className=\"buttons-wrapper\">\r\n                    <h1>{renderTime(seconds)}</h1>\r\n                </div >\r\n                <button style={{ display: isRunning || !seconds ? 'none' : 'block' }}\r\n                    onClick={handleClickPlay} className=\"btn\">Play</button>\r\n                <button style={{ display: isRunning && seconds ? 'block' : 'none' }}\r\n                    onClick={handlePauseClick} className=\"btn\">Pause</button>\r\n                <button onClick={handleRestartClick} className=\"btn\">Restart</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Timer;","import React, { Component } from 'react';\r\nimport Timer from './Timer';\r\nimport Timer2 from './Timer2';\r\nimport Timer3 from './Timer3';\r\nimport './style.css';\r\n\r\nclass TimersPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            time: 200,\r\n            //custom by myself\r\n            start: true,\r\n            restart: undefined\r\n        }\r\n        //custom bymyself\r\n        this.getStart = this.getStart.bind(this);\r\n        this.getRestart = this.getRestart.bind(this);\r\n\r\n    }\r\n\r\n    getStart = () => {\r\n        this.setState({ restart: true });\r\n        setTimeout(() => { this.setState({ restart: false }) }, 1000);\r\n    };\r\n\r\n    getRestart = () => {\r\n        this.setState(({ restart }) => ({\r\n            restart: !restart\r\n        }))\r\n    };\r\n\r\n\r\n    handleTimeEnd = () => {\r\n        console.log('Час вийшов!')\r\n        this.setState({\r\n            time: this.state.time\r\n        })\r\n    }\r\n    handleChangeTick = (seconds) => {\r\n        console.log(seconds)\r\n    }\r\n    handleTimeStart = (timeLeft, renderTime) => {\r\n        console.log(`Таймер запущено, залишилося: ${renderTime(timeLeft)}c`)\r\n    }\r\n    handleTimePause = (timeLeft, renderTime) => {\r\n        console.log(`Таймер на паузі, залишилося: ${renderTime(timeLeft)}с`)\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { start } = this.state;\r\n        return (\r\n            <div className=\"timer-wrapper\">\r\n                <Timer start={this.state.start} restart={this.state.restart} />\r\n                <button onClick={this.getStart} className=\"btn\">{start ? 'Pause' : 'Start'} timer</button>\r\n                <button onClick={this.getRestart} className=\"btn\">Restart timer</button>\r\n                <div>\r\n                    <Timer2 />\r\n                </div>\r\n                <div>\r\n                    <Timer3 time={this.state.time} autostart={false} step={300} onTick={this.handleChangeTick}\r\n                        onTimeEnd={this.handleTimeEnd}\r\n                        onTimeStart={this.handleTimeStart}\r\n                        onTimePause={this.handleTimePause} />\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default TimersPage;\r\n\r\n\r\n","import TimersPage from './components/TimersPage';\n\nfunction App() {\n  return (\n    <div>\n      <TimersPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}